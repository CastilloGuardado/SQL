##In this SQL, I did an analysis on sales data to identify trends and patterns, and queried customer data to segment them for targeted marketing campaigns.

--How many orders were placed in January?

SELECT COUNT(orderID) Orders_Placed
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--How many of those orders were for an iPhone?

SELECT COUNT(orderID) Orders_Placed
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

--Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT acctnum
FROM BiT_DB.customers cust
RIGHT JOIN BIT_DB.FebSales feb
ON cust.order_id=feb.orderID
WHERE length(order_id) = 6
AND order_id <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?

SELECT product
,MIN(price) Price
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product
ORDER BY Price ASC LIMIT 1;

--What is the total revenue for each product sold in January?

SELECT Product
,SUM(quantity)*price Total_Rev
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT Product
,SUM(quantity) Total_Sold
,SUM(quantity)*price Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
AND length(orderid) = 6
AND orderid <> 'Order ID';

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(cust.acctnum)
,AVG(quantity*price) Avg_Rev
FROM BIT_DB.customers cust
Left JOIN BIT_DB.FebSales feb
ON cust.order_id=feb.orderID
WHERE quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';

--List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT Product
,SUM(quantity) Total_Sold
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product;

##Continuing with this database I completed a more advanced customer and order analysis.

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

SELECT DISTINCT location
,COUNT(orderID) Num_of_Orders
FROM BIT_DB.JanSales Jan
WHERE location like '%NY%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY location
HAVING Num_of_Orders>=3;

--How many of each type of headphone were sold in February?

SELECT DISTINCT Product
,SUM(Quantity) Sold
FROM BIT_DB.FebSales
WHERE Product Like '%headphone%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product;

--What was the average amount spent per account in February?

SELECT SUM(quantity*price)/ COUNT(cust.acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID=cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--What was the average quantity of products purchased per account in February? 

SELECT SUM(quantity)/ COUNT(cust.acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID=cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT Product
,SUM(Quantity)*price total_revenue
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product
ORDER BY total_revenue DESC
LIMIT 1;
